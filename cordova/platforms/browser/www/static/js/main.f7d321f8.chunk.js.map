{"version":3,"sources":["state/state-context.ts","components/Container.tsx","components/Link.tsx","components/Icon.tsx","utils/string-utils.ts","components/Page.tsx","components/ErrorMessage.tsx","components/Home.tsx","utils/file-utils.ts","components/FileBox.tsx","utils/format-utils.ts","components/Grid.tsx","components/FilesList.tsx","components/Doc.tsx","components/Video.tsx","components/Viewer.tsx","components/ExternalLink.tsx","components/Services.tsx","theme/Theme.ts","App.tsx","serviceWorker.ts","index.tsx","../node_modules/pdfjs-dist/build sync","assets/Raspberry_Pi_Logo.svg","assets/download.svg","assets/pdf.svg","assets/popcorn.svg","assets/television.svg","assets/video-player.svg","assets/radio-antenna.svg","assets/brain.svg"],"names":["stateContext","React","createContext","Container","styled","main","props","theme","background","color","gradient","StyledLink","RouterLink","textColor","Link","elementRef","useRef","children","focusKey","to","restProps","focused","useFocusable","onKeyPress","event","key","stopPropagation","current","click","ref","className","type2svg","pi","popcorn","videoplayer","pdf","download","television","radioantenna","brain","Image","img","Icon","type","svgKey","src","kebabCase","value","replace","toLowerCase","PageStyle","div","Title","h1","Header","header","FocusablePage","Focusable","Page","title","backButton","showLogo","useContext","setState","defaultProps","ErrorMessage","h3","HomeContent","Home","useState","hasError","setErrors","folders","setFolders","useEffect","fetch","then","res","json","console","log","catch","length","map","folder","name","isVideoFile","filename","lastIndex","lastIndexOf","extension","substr","toUpperCase","indexOf","isPdfFile","FileInfo","FileContent","StyledBox","fileBox","backgroundColor","boxShadow","light","intense","Box","date","file","path","previewFile","pageNumber","height","url","width","mtime","Date","toLocaleDateString","fileSize","size","Math","abs","Number","isNaN","units","quotient","floor","log10","toFixed","formatFileSizeMetric","Grid","FilesList","files","setFilesList","FileBox","PageCenteredContent","Doc","numPages","setNumPages","currentPage","setCurrentPage","onKeyDown","useCallback","KeyboardEvent","document","addEventListener","removeEventListener","style","display","alignItems","justifyContent","onLoadSuccess","Wrapper","Video","videoplayerRef","getInternalPlayer","focus","autoFocus","controls","ProcessDocParams","useParams","viewer","a","href","ServicesContent","FlexColumnContent","Services","mainColor","chroma","backgroundDarkSpotColor","alpha","ThemeGlobalStyle","createGlobalStyle","fontsCSS","layoutCSS","pdfjs","GlobalWorkerOptions","workerSrc","version","App","state","useSunbeam","moveFocusLeft","moveFocusRight","moveFocusUp","moveFocusDown","focusManager","setFocus","Provider","exact","Viewer","FocusManager","initialFocusPath","SunbeamProvidedApp","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id"],"mappings":"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","file":"static/js/main.f7d321f8.chunk.js","sourcesContent":["import React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { AppState } from '../utils/Types';\n\nconst stateContext = React.createContext([null, () => {}] as AppState); // Create a context object\n\nexport {\n    stateContext, // Export it so it can be used by other Components\n};\n","// import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.main`\n    background-color: ${props => props.theme.background.color};\n    background: ${props => props.theme.background.gradient};\n    height: 100%;\n    min-height: 100vh;\n`;\n\nexport default Container;\n","import React, { useRef } from 'react';\nimport { useFocusable } from 'react-sunbeam';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nconst StyledLink = styled(RouterLink)`\n    color: ${props => props.theme.textColor};\n    font-size: 3rem;\n    text-decoration: none;\n\n    text-align: center;\n    opacity: 0.7;\n    border-bottom: 1px solid transparent;\n    transition: all 200ms ease-in;\n\n    display: flex;\n    align-items: center;\n\n    &.focused,\n    &:focus,\n    &:active,\n    &:hover {\n        opacity: 1;\n\n        border-bottom: 1px solid ${props => props.theme.textColor};\n    }\n`;\n\nconst Link: React.SFC<any> = (props: any) => {\n    // eslint-disable-next-line no-unused-vars\n    const elementRef = useRef<HTMLAnchorElement>(null);\n\n    const { children, focusKey, to, ...restProps } = props;\n    const { focused } = useFocusable({\n        focusKey,\n        elementRef,\n        onKeyPress(event) {\n            if (event.key === 'Enter') {\n                event.stopPropagation();\n                if (elementRef && elementRef.current) {\n                    elementRef?.current?.click();\n                }\n            }\n        },\n    });\n    return (\n        <StyledLink ref={elementRef} className={focused ? 'focused' : ''} to={to} {...restProps}>\n            {children}\n        </StyledLink>\n    );\n};\nexport default Link;\n","import React from 'react';\nimport styled from 'styled-components';\nimport pi from '../assets/Raspberry_Pi_Logo.svg';\n\nimport download from '../assets/download.svg';\nimport pdf from '../assets/pdf.svg';\nimport popcorn from '../assets/popcorn.svg';\n\nimport television from '../assets/television.svg';\nimport videoplayer from '../assets/video-player.svg';\nimport radioantenna from '../assets/radio-antenna.svg';\nimport brain from '../assets/brain.svg';\ntype IconProps = {\n    type?: 'pi' | 'popcorn' | 'videoplayer' | 'pdf' | 'download' | 'television' | 'radioantenna' | 'brain';\n    className?: string;\n};\n\nconst type2svg = {\n    pi,\n    popcorn,\n    videoplayer,\n    pdf,\n    download,\n    television,\n    radioantenna,\n    brain,\n};\nconst Image = styled.img`\n    height: 3rem;\n    margin-right: 1rem;\n`;\n\nconst Icon = ({ type, className }: IconProps) => {\n    const svgKey = type || 'pi';\n\n    return <Image className={className} src={type2svg[svgKey]} />;\n};\n\nexport default Icon;\n","export const kebabCase = (value: string) => {\n    return value\n        .replace(/([a-z])([A-Z])/g, '$1-$2')\n        .replace(/\\s+/g, '-')\n        .toLowerCase();\n};\n","import React, { useContext } from 'react';\nimport { stateContext } from '../state/state-context';\nimport Icon from './Icon';\nimport { Focusable } from 'react-sunbeam';\nimport { kebabCase } from '../utils/string-utils';\n\nimport styled from 'styled-components';\nimport Link from './Link';\n\nconst PageStyle = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n`;\nconst Title = styled.h1`\n    flex: 1;\n    font-weight: 100;\n`;\n\nconst Header = styled.header`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 1rem;\n`;\ntype PageProps = { showLogo?: boolean; title: string; backButton?: boolean; children?: any };\nconst FocusablePage = styled(Focusable)``;\nconst Page: React.SFC<PageProps> = ({ title, children, backButton, showLogo }: PageProps) => {\n    const [, setState] = useContext(stateContext);\n    if (setState) {\n        setState(() => {\n            return kebabCase(title);\n        });\n    }\n\n    return (\n        <FocusablePage focusKey={kebabCase(title)}>\n            <PageStyle>\n                <Header>\n                    {showLogo && <Icon />}\n                    <Title>{title}</Title>\n                    {backButton && (\n                        <Link to=\"/\" focusKey=\"back\">\n                            ×\n                        </Link>\n                    )}\n                </Header>\n\n                {children}\n            </PageStyle>\n        </FocusablePage>\n    );\n};\n\nPage.defaultProps = { backButton: false, showLogo: true };\nexport default Page;\n","import styled from 'styled-components';\n\nconst ErrorMessage = styled.h3`\n    color: red;\n`;\n\nexport default ErrorMessage;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Link from './Link';\nimport Page from './Page';\nimport Icon from './Icon';\nimport ErrorMessage from './ErrorMessage';\nimport { kebabCase } from '../utils/string-utils';\n// eslint-disable-next-line no-unused-vars\nimport { FileType } from './FileType';\n\nconst HomeContent = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-around;\n    height: calc(100vh - 9rem);\n    flex-wrap: wrap;\n\n    .icon {\n        margin: 0 1rem;\n    }\n`;\n\ntype HomeProps = Readonly<{}>;\n\nconst Home: React.SFC<HomeProps> = () => {\n    const [hasError, setErrors] = useState(false);\n    const [folders, setFolders]: [FileType[], Function] = useState([]);\n    useEffect(() => {\n        fetch('http://192.168.0.22/json')\n            .then(res => res.json())\n            .then(res => {\n                console.log(res);\n                setFolders(res);\n            })\n            .catch(() => setErrors(true));\n    }, []);\n    return (\n        <Page title=\"raspberry pi index\">\n            <HomeContent>\n                {hasError && <ErrorMessage>Something went wrong</ErrorMessage>}\n                {folders.length > 0 &&\n                    folders.map(folder => (\n                        <Link key={kebabCase(folder.name)} focusKey={kebabCase(folder.name)} to={`/${folder.name}`}>\n                            {folder.name}{' '}\n                            <Icon className=\"icon\" type={folder.name === 'docs' ? 'pdf' : 'videoplayer'} />\n                        </Link>\n                    ))}\n\n                <Link focusKey={'services'} to={'/services'}>\n                    Services <Icon type=\"brain\" />\n                </Link>\n            </HomeContent>\n        </Page>\n    );\n};\n\nexport default Home;\n","export const isVideoFile = (filename: string | undefined) => {\n    if (!filename) {\n        return false;\n    }\n    const extensions = ['MP4', 'AVI', 'MOV', 'FLV', 'WMV'];\n    var lastIndex = filename.lastIndexOf('.');\n\n    const extension = filename.substr(lastIndex + 1).toUpperCase();\n\n    return extensions.indexOf(extension) > -1;\n};\n\nexport const isPdfFile = (filename: string | undefined) => {\n    if (!filename) {\n        return false;\n    }\n    var lastIndex = filename.lastIndexOf('.');\n\n    const extension = filename.substr(lastIndex + 1).toUpperCase();\n\n    return extension === 'PDF';\n};\n","import React, { useRef } from 'react';\nimport { useFocusable } from 'react-sunbeam';\nimport { Link as RouterLink } from 'react-router-dom';\nimport ReactPlayer from 'react-player';\nimport { formatDateToShortDateString, formatFileSizeMetric } from '../utils/format-utils';\nimport { isVideoFile, isPdfFile } from '../utils/file-utils';\nimport styled from 'styled-components';\nimport { Document as PDFDocument, Page as PDFPage } from 'react-pdf';\n// eslint-disable-next-line no-unused-vars\nimport { FileType } from './FileType';\n\nconst FileInfo = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    justify-content: flex-end;\n    flex: 1;\n    height: 100%;\n    font-size: 0.8rem;\n    min-width: 5rem;\n`;\nconst FileContent = styled.div`\n    min-height: 200px;\n    margin-top: 1rem;\n    display: flex;\n    flex-direction: row;\n    align-items: flex-end;\n    justify-content: space-between;\n`;\n\nconst StyledBox = styled(RouterLink)`\n    color: ${props => props.theme.textColor};\n    font-size: 1rem;\n    background-color: ${props => props.theme.fileBox.backgroundColor};\n    padding: 1rem;\n    word-break: break-word;\n    text-decoration: none;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    box-shadow: ${props => props.theme.boxShadow.light};\n    &,\n    & * {\n        opacity: 0.7;\n    }\n\n    transition: all 200ms ease-in;\n\n    &.focused,\n    &:focus,\n    &:active,\n    &:hover {\n        box-shadow: ${props => props.theme.boxShadow.intense};\n        opacity: 1;\n        * {\n            opacity: 1;\n        }\n    }\n`;\ntype BoxProps = Readonly<{ focusKey: string; path: string; file: FileType }>;\nconst Box: React.SFC<BoxProps> = ({ focusKey, file, path }: BoxProps) => {\n    // eslint-disable-next-line no-unused-vars\n    const elementRef = useRef<any>(null);\n\n    const { focused } = useFocusable({\n        focusKey,\n        elementRef,\n        onKeyPress(event) {\n            if (event.key === 'Enter') {\n                event.stopPropagation();\n                if (elementRef && elementRef.current) {\n                    elementRef?.current?.click();\n                }\n            }\n        },\n    });\n\n    let previewFile = null;\n\n    if (isPdfFile(file.name)) {\n        previewFile = (\n            <PDFDocument file={`http://192.168.0.22/files/${path}/${file.name}`}>\n                <PDFPage pageNumber={1} height={200} />\n            </PDFDocument>\n        );\n    } else if (isVideoFile(file.name)) {\n        previewFile = <ReactPlayer url={`http://192.168.0.22/files/${path}/${file.name}`} width={300} height={200} />;\n    }\n\n    return (\n        <StyledBox className={focused ? 'focused' : ''} to={`/viewer/${path}/${file.name}`} ref={elementRef}>\n            <h3>{file.name}</h3>\n            <FileContent>\n                {previewFile}\n                <FileInfo>\n                    <p>{formatDateToShortDateString(file.mtime)}</p>\n                    <p>{formatFileSizeMetric(file.size)}</p>\n                </FileInfo>\n            </FileContent>\n        </StyledBox>\n    );\n};\nexport default Box;\n","/**\n * Format file size in metric prefix\n * @param fileSize\n * @returns {string}\n */\nexport const formatFileSizeMetric = (fileSize: number) => {\n    let size = Math.abs(fileSize);\n\n    if (Number.isNaN(size)) {\n        return 'Invalid file size';\n    }\n\n    if (size === 0) {\n        return '0 bytes';\n    }\n\n    const units = ['bytes', 'kB', 'MB', 'GB', 'TB'];\n    let quotient = Math.floor(Math.log10(size) / 3);\n    quotient = quotient < units.length ? quotient : units.length - 1;\n    size /= 1000 ** quotient;\n\n    return `${+size.toFixed(2)} ${units[quotient]}`;\n};\n\n/**\n * Format file size in binary prefix\n * @param fileSize\n * @returns {string}\n */\nexport const formatFileSizeBinary = (fileSize: number) => {\n    let size = Math.abs(fileSize);\n\n    if (Number.isNaN(size)) {\n        return 'Invalid file size';\n    }\n\n    if (size === 0) {\n        return '0 bytes';\n    }\n\n    const units = ['bytes', 'kiB', 'MiB', 'GiB', 'TiB'];\n    let quotient = Math.floor(Math.log2(size) / 10);\n    quotient = quotient < units.length ? quotient : units.length - 1;\n    size /= 1024 ** quotient;\n\n    return `${+size.toFixed(2)} ${units[quotient]}`;\n};\n\nexport const formatTimestampToDateString = (date: number) => new Date(date).toISOString().split('T')[0];\n\nexport const formatDateToShortDateString = (date: any) => new Date(date).toLocaleDateString();\n","// import React from 'react';\nimport styled from 'styled-components';\n\nconst Grid = styled.div`\n    color: ${props => props.theme.textColor};\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\n    grid-gap: 1rem;\n    padding: 1rem;\n`;\n\nexport default Grid;\n","import React, { useState, useEffect } from 'react';\n\nimport { kebabCase } from '../utils/string-utils';\nimport FileBox from './FileBox';\nimport Grid from './Grid';\nimport ErrorMessage from './ErrorMessage';\n\n// eslint-disable-next-line no-unused-vars\nimport { FileType } from './FileType';\n\ntype FilesListProps = Readonly<{ path: string }>;\n\nconst FilesList: React.SFC<FilesListProps> = ({ path }: FilesListProps) => {\n    const [hasError, setErrors] = useState(false);\n    const [files, setFilesList]: [FileType[], Function] = useState([]);\n\n    useEffect(() => {\n        fetch(`http://192.168.0.22/json/${path}`)\n            .then(res => res.json())\n            .then(res => {\n                console.log(res);\n                setFilesList(res);\n            })\n            .catch(() => setErrors(true));\n    }, [path]);\n\n    return (\n        <>\n            {hasError && <ErrorMessage>Something went wrong</ErrorMessage>}\n            {files.length > 0 && (\n                <Grid>\n                    {files.map(file => (\n                        <FileBox key={kebabCase(file.name)} focusKey={kebabCase(file.name)} path={path} file={file} />\n                    ))}\n                </Grid>\n            )}\n        </>\n    );\n};\n\nexport default FilesList;\n","import React, { useState, useCallback, useEffect } from 'react';\n\nimport styled from 'styled-components';\n\nimport { Document as PDFDocument, Page as PDFPage } from 'react-pdf';\nimport Page from './Page';\n\ntype DocProps = Readonly<{ filename: string | undefined; path: string | undefined }>;\nconst PageCenteredContent = styled(Page)`\n    .react-pdf__Page {\n        position: relative !important;\n        display: flex !important;\n        align-items: center !important;\n        justify-content: center !important;\n    }\n`;\n\nconst Doc: React.SFC<DocProps> = ({ filename, path }: DocProps) => {\n    const [numPages, setNumPages] = useState(0);\n    const [currentPage, setCurrentPage] = useState(1);\n    const onDocumentLoadSuccess = (document: any) => {\n        const { numPages } = document;\n\n        setNumPages(numPages);\n    };\n    const onKeyDown = useCallback(\n        event => {\n            if (!(event instanceof KeyboardEvent)) return;\n            switch (event.key) {\n                case 'ArrowRight':\n                    if (currentPage < numPages) {\n                        setCurrentPage(currentPage + 1);\n                    }\n                    return;\n                case 'ArrowLeft':\n                    if (currentPage > 1) {\n                        setCurrentPage(currentPage - 1);\n                    }\n                    return;\n            }\n        },\n        [currentPage, setCurrentPage, numPages],\n    );\n    useEffect(() => {\n        document.addEventListener('keydown', onKeyDown);\n        return () => document.removeEventListener('keydown', onKeyDown);\n    }, [onKeyDown]);\n\n    return (\n        <PageCenteredContent title={filename || 'NO_NAME'} backButton>\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                <PDFDocument\n                    file={`http://192.168.0.22/files/${path}/${filename}`}\n                    onLoadSuccess={onDocumentLoadSuccess}\n                >\n                    <PDFPage className=\"center\" pageNumber={currentPage} height={700} />\n                </PDFDocument>\n            </div>\n        </PageCenteredContent>\n    );\n};\n\nexport default Doc;\n","import React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ReactPlayer from 'react-player';\nimport Page from './Page';\n\ntype VideoProps = Readonly<{ filename: string | undefined; path: string | undefined }>;\nconst Wrapper = styled.div`\n    position: relative;\n    width: 90vw;\n    height: 85vh;\n\n    margin: 0 auto;\n`;\nconst Video: React.SFC<VideoProps> = ({ filename, path }: VideoProps) => {\n    const videoplayerRef = useRef<ReactPlayer>(null);\n    // if (myVideo.paused) myVideo.play();\n    // else myVideo.pause();\n\n    // const onKeyDown = useCallback(\n    //     event => {\n    //         if (!(event instanceof KeyboardEvent)) return;\n    //         // const videoplayer = videoplayerRef.current;\n    //         console.log(event );\n\n    //         // switch (event.key) {\n    //         //     case 'ArrowRight':\n    //         //         videoplayer?.seekTo(3, 'seconds');\n    //         //         return;\n    //         //     case 'ArrowLeft':\n    //         //         videoplayer?.seekTo(3, 'seconds');\n    //         //         return;\n    //         // }\n    //     },\n    //     [videoplayerRef],\n    // );\n    // useEffect(() => {\n    //     document.addEventListener('keydown', onKeyDown);\n    //     return () => document.removeEventListener('keydown', onKeyDown);\n    // }, [onKeyDown]);\n    // console.log('Video component', path, filename);\n    useEffect(() => {\n        const videoplayer = videoplayerRef.current;\n        (videoplayer?.getInternalPlayer() as HTMLVideoElement).focus();\n        return () => {};\n    }, [videoplayerRef]);\n    return (\n        <Page title={filename || 'NO_NAME'} backButton>\n            <Wrapper>\n                <ReactPlayer\n                    ref={videoplayerRef}\n                    autoFocus={true}\n                    className=\"react-player\"\n                    url={`http://192.168.0.22/files/${path}/${filename}`}\n                    width=\"100%\"\n                    height=\"100%\"\n                    controls={true}\n                />\n            </Wrapper>\n        </Page>\n    );\n};\n\nexport default Video;\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { isVideoFile, isPdfFile } from '../utils/file-utils';\n\nimport Doc from './Doc';\nimport Video from './Video';\n\ntype ViewerProps = Readonly<{}>;\n\nconst ProcessDocParams = () => {\n    let { path, filename } = useParams();\n\n    let viewer = null;\n\n    if (isPdfFile(filename)) {\n        viewer = <Doc path={path} filename={filename} />;\n    } else if (isVideoFile(filename)) {\n        viewer = <Video path={path} filename={filename} />;\n    }\n\n    return viewer;\n};\nexport default ProcessDocParams;\n","import React, { useRef } from 'react';\nimport { useFocusable } from 'react-sunbeam';\n\nimport styled from 'styled-components';\n\nconst StyledLink = styled.a`\n    color: ${props => props.theme.textColor};\n    font-size: 3rem;\n    text-decoration: none;\n\n    text-align: center;\n    opacity: 0.7;\n    border-bottom: 1px solid transparent;\n    transition: all 200ms ease-in;\n\n    display: flex;\n    align-items: center;\n\n    &.focused,\n    &:focus,\n    &:active,\n    &:hover {\n        opacity: 1;\n\n        border-bottom: 1px solid ${props => props.theme.textColor};\n    }\n`;\n\nconst Link: React.SFC<any> = (props: any) => {\n    // eslint-disable-next-line no-unused-vars\n    const elementRef = useRef<HTMLAnchorElement>(null);\n\n    const { children, focusKey, to, ...restProps } = props;\n    const { focused } = useFocusable({\n        focusKey,\n        elementRef,\n        onKeyPress(event) {\n            if (event.key === 'Enter') {\n                event.stopPropagation();\n                if (elementRef && elementRef.current) {\n                    elementRef?.current?.click();\n                }\n            }\n        },\n    });\n    return (\n        <StyledLink ref={elementRef} className={focused ? 'focused' : ''} href={to} {...restProps}>\n            {children}\n        </StyledLink>\n    );\n};\nexport default Link;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Link from './ExternalLink';\nimport Page from './Page';\nimport Icon from './Icon';\n// eslint-disable-next-line no-unused-vars\n\ntype ServicesProps = Readonly<{}>;\n\nconst ServicesContent = styled.div`\n    height: 100%;\n\n    margin: 0 auto;\n\n    .link-text {\n        display: flex;\n        align-items: center;\n        font-size: 2rem;\n    }\n`;\nconst FlexColumnContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: space-evenly;\n    height: calc(100vh - 9rem);\n`;\nconst Services: React.SFC<ServicesProps> = () => {\n    return (\n        <Page title=\"Other services running\" backButton>\n            <ServicesContent>\n                <FlexColumnContent>\n                    <Link focusKey=\"kodi\" to=\"http://192.168.0.22:8080\">\n                        <span className=\"link-text\">\n                            <Icon type=\"popcorn\" />\n                            Kodi\n                        </span>\n                    </Link>\n                    <Link focusKey=\"tvheadend\" to=\"http://192.168.0.22:9981/\">\n                        <span className=\"link-text\">\n                            <Icon type=\"television\" />\n                            TVHeadend\n                        </span>\n                    </Link>\n\n                    <Link focusKey=\"torrent\" to=\"http://192.168.0.22:8112/\">\n                        <span className=\"link-text\">\n                            <Icon type=\"download\" />\n                            Delunge\n                        </span>\n                    </Link>\n                    <Link focusKey=\"iptv\" to=\"http://192.168.0.22/livetv/\">\n                        <span className=\"link-text\">\n                            <Icon type=\"radioantenna\" />\n                            IP TV files\n                        </span>\n                    </Link>\n                </FlexColumnContent>\n            </ServicesContent>\n        </Page>\n    );\n};\n\nexport default Services;\n","import * as layoutCSS from './layout.css';\nimport fontsCSS from './fonts.css';\n\nimport { createGlobalStyle } from 'styled-components';\n\nimport chroma from 'chroma-js';\n\nconst mainColor = chroma(15, 15, 17);\nconst backgroundDarkSpotColor = chroma(13, 41, 65);\n\nconst theme = {\n    background: {\n        color: mainColor,\n        gradient: `radial-gradient(circle at center bottom, ${mainColor} 0%, ${backgroundDarkSpotColor} 100%)`,\n    },\n    fileBox: {\n        backgroundColor: chroma('white').alpha(0.2),\n    },\n    boxShadow: {\n        intense: '10px 10px 5px 0px rgba(0,0,0,0.75);',\n        light: '5px 5px 5px 0px rgba(0,0,0,0.25);',\n    },\n\n    textColor: 'white',\n};\n\nexport default theme;\n\nexport const ThemeGlobalStyle = createGlobalStyle`\n  ${fontsCSS}\n    \n  ${layoutCSS}\n\n  html,body{\n      color: ${theme.textColor};\n  }\n`;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { SunbeamProvider, FocusManager, useSunbeam } from 'react-sunbeam';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { stateContext } from './state/state-context';\n\nimport Container from './components/Container';\nimport Home from './components/Home';\nimport FilesList from './components/FilesList';\nimport Page from './components/Page';\nimport Viewer from './components/Viewer';\nimport Services from './components/Services';\n\nimport { ThemeProvider } from 'styled-components';\nimport theme, { ThemeGlobalStyle } from './theme/Theme';\n\nimport { pdfjs } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n// eslint-disable-next-line no-unused-vars\n// import { UserType, AppState } from './utils/Types';\n\ntype AppProps = Readonly<{}>;\n\nconst App: React.SFC<AppProps> = () => {\n    const [state, setState] = useState('raspberry-pi-index');\n    const { moveFocusLeft, moveFocusRight, moveFocusUp, moveFocusDown } = useSunbeam();\n    const onKeyDown = useCallback(\n        event => {\n            if (!(event instanceof KeyboardEvent)) {\n                return;\n            }\n\n            switch (event.key) {\n                case 'ArrowRight':\n                    moveFocusRight();\n                    return;\n                case 'ArrowLeft':\n                    moveFocusLeft();\n                    return;\n                case 'ArrowUp':\n                    moveFocusUp();\n                    return;\n                case 'ArrowDown':\n                    moveFocusDown();\n                    return;\n                case 'Backspace':\n                    focusManager.setFocus([state, 'back']);\n                    return;\n            }\n        },\n        [moveFocusLeft, moveFocusRight, moveFocusUp, moveFocusDown, state],\n    );\n\n    useEffect(() => {\n        document.addEventListener('keydown', onKeyDown);\n        return () => document.removeEventListener('keydown', onKeyDown);\n    }, [onKeyDown]);\n    return (\n        <Router>\n            <ThemeProvider theme={theme}>\n                <stateContext.Provider value={[state, setState]}>\n                    <Container>\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <Home />\n                            </Route>\n                            <Route path=\"/videos\">\n                                <Page title=\"Videos list\" backButton>\n                                    <FilesList path=\"videos\" />\n                                </Page>\n                            </Route>\n                            <Route path=\"/docs\">\n                                <Page title=\"Docs list\" backButton>\n                                    <FilesList path=\"docs\" />\n                                </Page>\n                            </Route>\n                            <Route path=\"/viewer/:path/:filename\">\n                                <Viewer />\n                            </Route>\n                            <Route path=\"/services\">\n                                <Services />\n                            </Route>\n                        </Switch>\n                    </Container>\n                </stateContext.Provider>\n                <ThemeGlobalStyle />\n            </ThemeProvider>\n        </Router>\n    );\n};\n\nconst focusManager = new FocusManager({\n    initialFocusPath: ['raspberry-pi-index', 'videos'],\n});\nconst SunbeamProvidedApp = () => (\n    <SunbeamProvider focusManager={focusManager}>\n        <App />\n    </SunbeamProvider>\n);\n\nexport default SunbeamProvidedApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 36;","module.exports = __webpack_public_path__ + \"static/media/Raspberry_Pi_Logo.4c744181.svg\";","module.exports = __webpack_public_path__ + \"static/media/download.78c6357f.svg\";","module.exports = __webpack_public_path__ + \"static/media/pdf.9d15e90e.svg\";","module.exports = __webpack_public_path__ + \"static/media/popcorn.9b2648a6.svg\";","module.exports = __webpack_public_path__ + \"static/media/television.de4e7c74.svg\";","module.exports = __webpack_public_path__ + \"static/media/video-player.ccae19ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/radio-antenna.261f6c47.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.22fd021b.svg\";"],"sourceRoot":""}